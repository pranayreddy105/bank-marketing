[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Pranay.Bommineni\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Pranay.Bommineni\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 109.6452ms
[debug]       Load.loadUnit: defsScala took 0.2897ms
[debug] [Loading] Scanning directory C:\Users\Pranay.Bommineni\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Pranay.Bommineni\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.6706 ms
[debug]           Load.resolveProject(global-plugins) took 42.3666ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Pranay.Bommineni\.sbt\1.0\plugins, plugins: List(<none>))) took 83.4697ms
[debug] [Loading] Done in C:\Users\Pranay.Bommineni\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 100.4551ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2161ms
[debug]     Load.loadUnit(file:/C:/Users/Pranay.Bommineni/.sbt/1.0/plugins/, ...) took 217.8426ms
[debug]   Load.apply: load took 350.2916ms
[debug]   Load.apply: resolveProjects took 8.4219ms
[debug]   Load.apply: finalTransforms took 77.8196ms
[debug]   Load.apply: config.delegates took 9.9031ms
[debug]   Load.apply: Def.make(settings)... took 524.496ms
[debug]   Load.apply: structureIndex took 129.3098ms
[debug]   Load.apply: mkStreams took 1.9553ms
[info] loading global plugins from C:\Users\Pranay.Bommineni\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3015.1549ms
[debug]           Load.loadUnit: plugins took 37.0619ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing\project
[debug]             Load.loadUnit: mkEval took 7.7322ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7935 ms
[info] loading settings for project bank-marketing-build from idea.sbt ...
[debug]               Load.resolveProject(bank-marketing-build) took 2.8639ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bank-marketing-build, base: C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing\project, plugins: List(<none>))) took 5.1548ms
[debug] [Loading] Done in C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing\project, returning: (bank-marketing-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2330.552ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.4658ms
[debug]         Load.loadUnit(file:/C:/Users/Pranay.Bommineni/IdeaProjects/bank-marketing/project/, ...) took 2375.4006ms
[debug]       Load.apply: load took 2377.6102ms
[debug]       Load.apply: resolveProjects took 0.1265ms
[debug]       Load.apply: finalTransforms took 10.9582ms
[debug]       Load.apply: config.delegates took 0.4937ms
[debug]       Load.apply: Def.make(settings)... took 90.6538ms
[debug]       Load.apply: structureIndex took 27.8738ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6204.3067ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing
[debug]       Load.loadUnit: mkEval took 0.8596ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5577 ms
[info] loading settings for project bank-marketing from build.sbt ...
[debug]         Load.resolveProject(bank-marketing) took 44.1721ms
[debug]       Load.loadTransitive: finalizeProject(Project(id bank-marketing, base: C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing, plugins: List(<none>))) took 48.1381ms
[debug] [Loading] Done in C:\Users\Pranay.Bommineni\IdeaProjects\bank-marketing, returning: (bank-marketing)
[debug]     Load.loadUnit: loadedProjectsRaw took 1730.1079ms
[debug]     Load.loadUnit: cleanEvalClasses took 33.0211ms
[debug]   Load.loadUnit(file:/C:/Users/Pranay.Bommineni/IdeaProjects/bank-marketing/, ...) took 7968.1165ms
[debug] Load.apply: load took 7970.1842ms
[debug] Load.apply: resolveProjects took 0.132ms
[debug] Load.apply: finalTransforms took 26.9771ms
[debug] Load.apply: config.delegates took 0.51ms
[debug] Load.apply: Def.make(settings)... took 99.5406ms
[debug] Load.apply: structureIndex took 26.298ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to bank-marketing (in build file:/C:/Users/Pranay.Bommineni/IdeaProjects/bank-marketing/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59738 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59738, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to bank-marketing (in build file:/C:/Users/Pranay.Bommineni/IdeaProjects/bank-marketing/)
[debug] > Exec(idea-shell, None, None)
